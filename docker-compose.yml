version: "3"

services:
  nats-server:
    container_name: nats-server
    image: nats:latest
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    networks:
      - microservices_network
  client-gateway:
    container_name: client-gateway
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:${CLIENT_GATEWAY_PORT}
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222
    networks:
      - microservices_network
  products-db:
    container_name: products-db
    image: postgres:16.2
    restart: always
    volumes:
      - ./products-ms/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=productsdb
    networks:
      - microservices_network
  products-ms:
    container_name: products-ms
    depends_on:
      - products-db
    build: ./products-ms
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=${PRODUCTS_DATABASE_URL}
    networks:
      - microservices_network
  orders-db:
    container_name: orders-db
    image: postgres:16.2
    restart: always
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=ordersdb
    networks:
      - microservices_network
  orders-ms:
    container_name: orders-ms
    depends_on:
      - orders-db
    build: ./orders-ms
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=${ORDERS_DATABASE_URL}
    networks:
      - microservices_network
networks:
  microservices_network:
    driver: bridge
